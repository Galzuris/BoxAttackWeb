(()=>{"use strict";const t="ArrowLeft",s="ArrowRight",i="KeyA",e="KeyD",h=new class{constructor(){this.keys=[],this.callbacks=[]}isPressed(t){return this.keys[t]??!1}init(){document.onkeydown=t=>{const s=this.isPressed(t.code);this.keys[t.code]=!0,0==s&&this.callbacks.forEach((s=>{s(t.code,!0)}))},document.onkeyup=t=>{const s=this.isPressed(t.code);this.keys[t.code]=!1,1==s&&this.callbacks.forEach((s=>{s(t.code,!1)}))}}sub(t){this.callbacks.push(t)}unsub(t){const s=this.callbacks.indexOf(t);s>=0&&this.callbacks.splice(s,1)}clearSubs(){this.callbacks=[]}};function o(t,s){return{up:Math.max(t.up,s.up),down:Math.min(t.down,s.down),left:Math.max(t.left,s.left),right:Math.min(t.right,s.right)}}function a(t,s,i,e,h){t=Math.floor(t),s=Math.floor(s);const a=Math.floor(i/2),r=Math.floor(e/2),n=t-a,c=s-r,l=t+a,d=s-r,f=t-a,w=s+r,p=t+a,m=s+r,g=-2,u=o(j.grid.getCollider(n+2,c+2),j.scene.getCollider(n-g,c-g,h)),x=o(j.grid.getCollider(l-2,d+2),j.scene.getCollider(l+g,d-g,h)),y=o(j.grid.getCollider(f+2,w-2),j.scene.getCollider(f-g,w+g,h)),b=o(j.grid.getCollider(p-2,m-2),j.scene.getCollider(p+g,m+g,h));return{up:Math.max(u.up,x.up),down:Math.min(y.down,b.down),left:Math.max(u.left,y.left),right:Math.min(x.right,b.right)}}function r(t){return Math.max(0,Math.min(t,1))}function n(t,s,i){return(1-(i=r(i)))*t+i*s}class c{id=1;pos={x:4,y:4};startPos={x:0,y:0};#t=0;drop(){this.mode=2}moveTo(t,s,i){this.startPos={x:this.pos.x,y:this.pos.y},this.mode=1,this.target={x:t,y:s},this.timer=i,this.time=i}init(){}enterScene(){}exitScene(){}draw(){Math.floor(this.#t)%2==0&&E.drawBlock(this.id-1,this.pos.x,this.pos.y,1)}update(t){switch(this.#t+=12*t,this.#t>2&&(this.#t-=2),this.mode){case 1:this.timer-=t;const s=r(1-this.timer/this.time);this.pos.x=n(this.startPos.x,this.target.x,s),this.pos.y=n(this.startPos.y,this.target.y,s),this.timer<0&&(this.timer=this.time,this.mode=-1,this.materialize());break;case 2:const i=L/2,e=a(this.pos.x+i,this.pos.y+i,i,i,[this]);this.pos.y+=t*D,this.pos.y+L>e.down&&(this.pos.y=e.down-L,this.mode=-1,this.materialize())}}materialize(){const t=j.grid.toGrid(this.pos.x+L/2,this.pos.y+L/2);j.grid.set(t.x,t.y,this.id),j.scene.remove(this)}}class l{init(){this.cols=Math.ceil(E.canvas.width/L),this.rows=Math.ceil(E.canvas.height/L),this.data=[],this.clear()}clear(){this.data=[];for(let t=0;t<this.cols;t++){this.data[t]=[];for(let s=0;s<this.rows;s++)this.data[t][s]=0}}generate(){for(let t=0;t<this.cols;t++)for(let s=0;s<this.rows;s++)this.data[t][s]=Math.floor(Math.random()>.9?1+4*Math.random():0);for(let t=0;t<this.rows+4;t++)this.stepDown()}canPush(t,s,i){const e=this.toGrid(t,s);if(0==this.#s(e.x,e.y)||0==e.x||e.x==this.cols-1)return!1;if(0==this.data[e.x][e.y])return!1;if(i<0){if(0==t)return!1}else if(t==this.cols-1)return!1;return!0}push(t,s,i){const e=this.toGrid(t,s);if(this.#s(e.x,e.y)){const t=new c;t.id=this.data[e.x][e.y],t.pos={x:e.x*L,y:e.y*L},t.moveTo((e.x+i)*L,e.y*L,.5),j.scene.add(t),this.data[e.x][e.y]=0}}set(t,s,i){this.#s(t,s)&&(this.data[t][s]=i)}update(){for(let t=0;t<this.cols;t++)for(let s=this.rows-2;s>=0;s--){const i=this.data[t][s],e=this.data[t][s+1];if(0!=i&&0==e){const i=new c;return i.id=this.data[t][s],i.pos={x:t*L,y:s*L},i.drop(),j.scene.add(i),void(this.data[t][s]=0)}}}stepDown(){let t=this.data;for(let s=this.rows-1;s>0;s--)for(let i=0;i<this.cols;i++)0==t[i][s]&&t[i][s-1]>0&&(t[i][s]=t[i][s-1],t[i][s-1]=0);this.data=t}draw(){this.#i();for(let t=0;t<this.cols;t++)for(let s=0;s<this.rows;s++){const i=this.data[t][s];i>0&&E.drawBlock(i-1,t*L,s*L,1)}}#i(){for(let t=0;t<this.cols;t++)for(let s=0;s<this.cols;s++){let i=0;s<=1?i=3:s<4?i=2:s<6?i=1:s==this.rows-1&&(i=2),3==t&&4==s&&(i=2),9==t&&3==s&&(i=1),E.drawBlock(i,t*L,s*L,0)}}getCollider(t,s){const i=this.toGrid(t,s);return{up:0,left:this.#e(i.x,i.y),right:this.#h(i.x,i.y),down:this.#o(i.x,i.y)}}#o(t,s){if(this.#s(t,s))for(let i=s;i<this.rows;i++)if(this.data[t][i]>0)return i*L;return E.canvas.height}#e(t,s){if(this.#s(t,s))for(let i=t;i>0;i--)if(this.data[i][s]>0)return i*L+L;return 0}#h(t,s){if(this.#s(t,s))for(let i=t;i<this.cols;i++)if(this.data[i][s]>0)return i*L;return E.canvas.width}#s(t,s){return t>=0&&t<this.cols&&s>=0&&s<this.rows}toGrid(t,s){return{x:Math.floor(t/L+.01),y:Math.floor(s/L+.01)}}}class d{#a;#r;#n=M;#c={x:0,y:0};#l=Math.random()>.5?1:0;#d=!1;#f;pos={x:32,y:32};#w=null;#p=null;constructor(t,s){this.#a=t,this.#r=t,this.#n=s,this.#f=0}init(){}enterScene(){}exitScene(){}draw(){const t=Math.floor(this.#r),s=this.#d?T[t]:C[t];if(E.drawPlayer(this.pos.x-R.w/2,this.pos.y-R.h,this.#a,s,this.#l),F&&this.#w){const t=this.#w;E.setColor("#FF0000"),E.drawLine(t.left,this.pos.y-R.h,t.left,this.pos.y),E.setColor("#00FF00"),E.drawLine(t.right,this.pos.y-R.h,t.right,this.pos.y),E.setColor("#FF00FF"),E.drawLine(this.pos.x-R.w/2,t.down,this.pos.x+R.w/2,t.down);const s=this.#p;E.setColor("#0000FF77"),E.context.fillRect(s.x-s.w/2,s.y-s.h/2,s.w,s.h)}}update(t){this.#r+=4*t,this.#r>=2&&(this.#r-=2);const s=R.w/2;this.#p={x:Math.floor(this.pos.x),y:Math.floor(this.pos.y-R.h/2),w:R.w,h:R.h};const i=a(this.#p.x,this.#p.y,this.#p.w,this.#p.h);this.#w=i;let e=this.#c;h.isPressed(this.#n.left)?(e.x=-v,this.#l=!0,this.#d=!0):h.isPressed(this.#n.right)?(e.x=v,this.#l=!1,this.#d=!0):(e.x=0,this.#d=!1),e.x>0?this.pos.x+e.x*t+s>i.right&&(this.pos.x=i.right-s,e.x=0,j.grid.canPush(this.pos.x+L,this.pos.y-L/2,1)?(this.#f+=t,this.#f>P&&(j.grid.push(this.pos.x+L,this.pos.y-L/2,1),this.#f=0)):this.#f=0):this.pos.x+e.x*t-s<i.left&&(this.pos.x=i.left+s,e.x=0,j.grid.canPush(this.pos.x-L,this.pos.y-L/2,-1)?(this.#f+=t,this.#f>P&&(j.grid.push(this.pos.x-L,this.pos.y-L/2,-1),this.#f=0)):this.#f=0);let o=!1;this.pos.y+e.y*t>i.down&&(this.pos.y=i.down,e.y=0,o=!0),o&&h.isPressed(this.#n.up)&&(e.y=-I),e.y+=S*t,this.pos.x+=e.x*t,this.pos.y+=e.y*t,this.#c=e}}class f{#m=0;#t=0;enter(){console.log("game")}draw(){E.clear(),j.grid.draw(),j.scene.draw();const t=E.canvas.width/2+this.#m;E.drawCrane(t,Math.floor(this.#t)%2==0),E.drawBlock(0,t-L/2-1,+L,1),E.drawNums(j.score,E.canvas.width/2,4,!0)}update(t){this.#t+=t,this.#m=64*Math.sin(this.#t),j.scene.update(t),j.grid.update(t)}exit(){}}class w{enter(){switch(console.log("game start"),j.gsm.change(new f),j.grid.clear(),j.grid.generate(),j.scene.clear(),j.score=0,j.mode){case x:const t=new d(b,k);j.scene.add(t);case u:const s=new d(y,M);j.scene.add(s)}}draw(){}update(){}exit(){}}class p{#g=0;enter(){j.mode=u,console.log("init"),h.sub(((t,s)=>{this.onkey(t,s)}))}exit(){h.clearSubs()}draw(){E.clear();const t=j.grid.cols,s=j.grid.rows+2;for(let i=0;i<t;i++){const t=i%2==0;for(let e=0;e<s;e++){const s=e%2==0,h=t&&!s||!t&&s?0:2,o=0!=h||0!=i&&i!=j.grid.cols-1?0:1;E.drawBlock(h,i*L,e*L+Math.ceil(this.#g-2*L),o)}}const i=Math.floor(E.canvas.width/2),e=Math.floor((E.canvas.height+E.title.height)/2)+1;let h=i-8;j.mode==x&&(h=i+8),E.setColor("#000000FF"),E.drawLine(h-4,e,h+3,e);const o=Math.floor((E.canvas.width-E.title.width)/2),a=Math.floor((E.canvas.height-E.title.height)/2);E.context.drawImage(E.title,o,a)}onkey(h,o){if(!1!==o)switch(h){case i:case t:j.mode=u;break;case e:case s:j.mode=x;break;case"Space":case"Enter":j.gsm.change(new w)}}update(t){this.#g+=t*L,this.#g>2*L&&(this.#g-=2*L)}}class m{change(t){this.state&&this.state.exit(),this.state=t,this.state.enter()}current(){return this.state}}class g{constructor(){this.objects=[]}add(t){this.objects.push(t),t.enterScene(this)}remove(t){const s=this.objects.indexOf(t);s>=0&&this.objects.splice(s,1),t.exitScene(this)}filter(t){return this.objects.filter((s=>s instanceof t))}getCollider(t,s,i){return{up:0,left:this.#e(t,s,4,i),right:this.#h(t,s,4,i),down:this.#o(t,s,4,i)}}#o(t,s,i,e){for(let h=s;h<=E.canvas.height;h+=i){const s=this.#u(t,h,e);if(null!==s)return s.pos.y}return E.canvas.height}#e(t,s,i,e){for(let h=t;h>=0;h-=i){const t=this.#u(h,s,e);if(null!==t&&t instanceof c)return t.pos.x+L}return 0}#h(t,s,i,e){for(let h=t;h<=E.canvas.width;h+=i){const t=this.#u(h,s,e);if(null!==t)return t.pos.x}return E.canvas.width}#u(t,s,i){for(let e=0;e<this.objects.length;e++){const h=this.objects[e];if(!(i&&i.indexOf(h)>=0)&&h instanceof c&&t>h.pos.x&&t<h.pos.x+L&&s>=h.pos.y&&s<=h.pos.y+L)return h}return null}draw(){this.objects.forEach((t=>{t.draw()}))}update(t){this.objects.forEach((s=>{s.update(t)}))}clear(){this.objects=[]}}const u=1,x=2,y=0,b=1,M={up:"KeyW",left:i,right:e},k={up:"ArrowUp",left:t,right:s},v=64,C=[0,1],T=[2,3],S=256,I=140,P=.5,D=32,F=!1,j=new class{init(){this.score=0,this.mode=u,this.gsm=new m,this.scene=new g,this.grid=new l,this.grid.init(),this.gsm.change(new p),this.dateTime=Date.now(),this.prevDateTime=this.dateTime,this.deltaTime=0,setInterval((()=>{this.draw()}),16.666666666666668),setInterval((()=>{this.update()}),25)}draw(){const t=this.gsm.current();t&&t.draw()}update(){this.dateTime=Date.now(),this.deltaTime=(this.dateTime-this.prevDateTime)/1e3;const t=this.gsm.current();t&&t.update(this.deltaTime),this.prevDateTime=this.dateTime}},L=16,B="#CCDCA2",R={w:12,h:16},E=new class{#x;#y;#b;#M;init(){this.canvas=document.getElementById("game"),this.context=this.canvas.getContext("2d"),this.context.lineWidth=2,this.#x=this.loadImage("./dist/images/blocks.png"),this.#y=this.loadImage("./dist/images/nums.png"),this.#b=this.loadImage("./dist/images/players.png"),this.#M=this.loadImage("./dist/images/crane.png"),this.title=this.loadImage("./dist/images/title.png")}loadImage(t){const s=new Image;return s.src=t,s}clear(){this.setColor(B),this.context.fillRect(0,0,this.canvas.width,this.canvas.height)}setColor(t){this.context.fillStyle=t,this.context.strokeStyle=t}drawLine(t,s,i,e){this.context.beginPath(),this.context.moveTo(Math.floor(t),Math.floor(s)),this.context.lineTo(Math.floor(i),Math.floor(e)),this.context.stroke()}drawCrane(t,s){const i=this.#M.width/2,e=(1==s?1:0)*i;t=Math.floor(t),this.context.drawImage(this.#M,e,0,i,i,t-i/2,0,i,i)}drawBlock(t,s,i,e){s=Math.ceil(s),i=Math.ceil(i),this.context.drawImage(this.#x,t*L,e*L,L,L,s,i,L,L)}drawNums(t,s,i,e){s=Math.ceil(s),i=Math.ceil(i);const h=""+t,o=h.length,a=4*h.length+1;let r=s;!0===e&&(r=Math.ceil(s-a/2)),this.setColor(B),this.context.fillRect(r-1,i-1,a,9);for(let t=0;t<o;t++){const s=parseInt(h[t]);this.context.drawImage(this.#y,4*s,0,4,8,r+4*t,i,4,8)}}drawPlayer(t,s,i,e,h){t=Math.floor(t),s=Math.floor(s);const o=Math.floor(i*R.h*2+(!0===h?0:R.h)),a=Math.floor(e*R.w);this.context.drawImage(this.#b,a,o,R.w,R.h,t,s,R.w,R.h)}};window.onload=()=>{h.init(),E.init(),j.init()}})();